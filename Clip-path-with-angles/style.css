.tan-angle {
    position: absolute;
    top: 0;
    left: 0;
    --width: 100vw;
    width: var(--width);
    
    /* Credit to https://gist.github.com/stereokai/7666bfe93929b14c2dced148c79e0e97 */
    
    /* Set angle in degrees */
    --angleDeg: 7;
    
    /* Convert degrees to radians using radians = degrees * pi / 180 */
    --angle: calc(var(--angleDeg) * 0.01745329251);
    
    /* Calculate approximate tan(angle) using Taylor series */
    --tan-term1: var(--angle);
    --tan-term2: calc((1/3) * var(--angle) * var(--angle) * var(--angle));
    --tan-term3: calc((2 / 15) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle));
    --tan-term4: calc((17/315) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle));
    --tan: calc(var(--tan-term1) + var(--tan-term2) + var(--tan-term3) + var(--tan-term4));
    
    /* --adjacent must match width of box */
    --adjacent: var(--width);
    
    /* Recall that tan(angle) = opposite / adjacent. Therefore Opposite = Adjacent * tan(angle) */
    --opposite: calc(var(--tan) * var(--adjacent));
}

.clip-path { 
    background-image: url('https://source.unsplash.com/random');
    height: 100vh;
    
    /* As width changes, height changes but notice that the angle stays the exact same! */
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - var(--opposite)), 0 100%);  
}

.skew {
    
    /* Compare clip-path angle with skew angle, they are the exact same */
    background-image: url('https://source.unsplash.com/random');
    height: 100vh;
    
    transform: skewY(-7deg);
}

.text {
    /* Contents do not need to be unskewed in clip-path box and bg image is not skewed! */
    color: white;
    font-size: 20rem;
}